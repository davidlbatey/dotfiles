call pathogen#runtime_append_all_bundles()

syntax enable			  " Highlight Syntax
set nocp			  " Set not compatible with VI
filetype plugin indent on         " Plugin indent on

au BufRead,BufNewFile {Gemfile,Rakefile,Vagrantfile,Thorfile,config.ru} set ft=ruby

set softtabstop=2		  " 2 space tabs
set shiftwidth=2		  " number of spaces to use for autoindenting
set shiftround			  " use multiple of shiftwidth when indenting with '<' and '>'
set showcmd			  " Display incomplete commands
set showmode			  " Show the vim mode
set number			  " Show line numbers
set ruler			  " Show cursor position
set title			  " Set tab title
set showmatch			  " set show matching parenthesis
set autoindent

set t_Co=256
colorscheme railscasts-console

set wildmenu			  " Enhanced command line completion
set wildmode=list:longest	  " Complete files like a shell
set ignorecase			  " Ignore case when searching
set smartcase			  " But case-sensitive if expression includes capital

set history=1000		  " Store 1000 lines of command history
set undolevels=1000		  " Undo levels

set backspace=indent,eol,start	  " Intuitive backspacing

set colorcolumn=80		  " Set color on line 80

set nobackup			  " Don't create backups
set noswapfile			  " Don't create swap files

set foldmethod=indent		  " Fold based on indent
set foldnestmax=3		  " Deepest fold is 3 levels
set nofoldenable		  " Don't fold by default

vnoremap _y :TOhtml<CR>:sav! temp.html<CR>:bd<CR>:!open temp.html<CR><CR>:sleep 1<CR>:!rm temp.html<CR><CR> " Opens a html copy which you can email

" Disable keys
map <up> <nop>
map <down> <nop>
map <left> <nop>
map <right> <nop>

" Add new gitvim bindings

nmap gs :Gstatus<cr>
nmap gc :Gcommit<cr>
nmap ga :Gwrite<cr>
nmap gl :Glog<cr>
nmap gd :Gdiff<cr>

" Ruby autocomplete
autocmd FileType ruby,eruby set omnifunc=rubycomplete#Complete
autocmd FileType ruby,eruby let g:rubycomplete_buffer_loading = 1
autocmd FileType ruby,eruby let g:rubycomplete_rails = 1
autocmd FileType ruby,eruby let g:rubycomplete_classes_in_global = 1
highlight Pmenu ctermbg=238 gui=bold

function! Tab_Or_Complete()
  if col('.')>1 && strpart( getline('.'), col('.')-2, 3 ) =~ '^\w'
    return "\<C-N>"
  else
   return "\<Tab>"
  endif
endfunction
:inoremap <Tab> <C-R>=Tab_Or_Complete()<CR>

